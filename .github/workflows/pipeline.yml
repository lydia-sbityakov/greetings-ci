# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      myVersion:
        description:  'Input Version'
      myValues:
        description: 'Input Values'


permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    
    # Map a step output to a job output
    outputs:
      artifact-tag:  ${{ steps.changelog.outputs.version }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3.14.0

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses:  gradle/gradle-build-action@v2.2.1
      with:
        arguments: build
        
    - name:  Tag artifact
      run: mv build/libs/greetings-ci.jar build/libs/greetings-ci-${{ steps.changelog.outputs.version || github.events.inputs.myVersion }}.jar

    - name: Upload Artifact
      uses:  actions/upload-artifact@v3
      with:
        name:  greetings-jar
        path: |
          build/libs
          test_script.sh
          
          
   
  test-run:

   runs-on: ubuntu-latest
   needs: build

   steps:
   - name:  Download candidate artifacts
     uses:  actions/download-artifact@v3
     with:
       name:  greetings-jar

   - name:  Execute test
     shell: bash
     env:
      ARGS:  ${{ github.event.inputs.myValues }}
     run: |
       chmod +x ./test_script.sh
       ./test_script.sh ${{ needs.build.outputs.artifact-tag || github.events.inputs.myVersion }}  "$ARGS"


  create-issue-on-failure:

    runs-on: ubuntu-latest 
    needs: test-run
    if: always() && failure() 
    steps:
      - name: invoke workflow to create issue
        run: > 
          curl -X POST
          -H "authorization: Bearer ${{ secrets.PIPELINE_USE }}"
          -H "Accept: application/vnd.github.v3+json"
          "https://api.github.com/repos/${{ github.repository }}/actions/workflows/create-failure-issue.yml/dispatches"
          -d '{"ref":"main",
               "inputs":
               {"title":"Automated workflow failure issue for commit ${{ github.sha }}",     
                "body":"This issue was automatically created by the GitHub Action workflow ** ${{ github.workflow }} **"}
              }'   
